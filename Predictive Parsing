class Parser:
    def __init__(self, text):
        self.text = text
        self.index = 0

    def parse(self):
        self.expr()

    def match(self, expected):
        if self.index < len(self.text) and self.text[self.index] == expected:
            self.index += 1
        else:
            self.error()

    def error(self):
        raise Exception('Parsing error')

    def expr(self):
        self.term()
        while self.index < len(self.text) and self.text[self.index] in {'+', '-'}:
            op = self.text[self.index]
            self.index += 1
            self.term()
            print(op)

    def term(self):
        self.factor()
        while self.index < len(self.text) and self.text[self.index] in {'*', '/'}:
            op = self.text[self.index]
            self.index += 1
            self.factor()
            print(op)

    def factor(self):
        if self.index < len(self.text) and self.text[self.index].isdigit():
            print(self.text[self.index])
            self.index += 1
        elif self.index < len(self.text) and self.text[self.index] == '(':
            self.index += 1
            self.expr()
            self.match(')')
        else:
            self.error()

text = "3 + 4 * (2 - 1)"
parser = Parser(text)
parser.parse()
